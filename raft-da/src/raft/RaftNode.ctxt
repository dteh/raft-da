#BlueJ class context
comment0.params=
comment0.target=RaftNode()
comment1.params=b
comment1.target=void\ setNewStateAvailable(boolean)
comment1.text=\n\ get/set\ whether\ a\ new\ instruction\ to\ be\ pushed\ to\ nodes\ (from\ leader)\n
comment10.params=
comment10.target=void\ init()
comment10.text=\n\ Startup\ process\:\n\ \t\t-\ Get\ available\ nodes\n\ \t\t-\ Broadcast\ a\ request\ for\ the\ leader\n
comment11.params=
comment11.target=void\ getLeader()
comment11.text=\n\ Broadcasts\ a\ request\ for\ the\ Leader's\ ID\n
comment12.params=
comment12.target=void\ onTimeOut()
comment12.text=\n\ \n\ When\ timeout\ is\ triggered,\ initiate\ voting\ process\n
comment13.params=args
comment13.target=void\ main(java.lang.String[])
comment2.params=
comment2.target=boolean\ getNewStateAvailable()
comment3.params=v
comment3.target=void\ setTimeoutVar(boolean)
comment3.text=\n\ get/set\ whether\ the\ timeout\ thread\ should\ be\ active\n
comment4.params=
comment4.target=boolean\ getTimeoutVar()
comment5.params=obj
comment5.target=void\ setStateObject(java.lang.Object)
comment5.text=\n\ get/set\ the\ object\ state\ to\ propagate\ to\ other\ nodes\n
comment6.params=
comment6.target=java.lang.Object\ getStateObject()
comment7.params=stateObject
comment7.target=void\ sendState(java.lang.Object)
comment7.text=\n\ Propagate\ the\ server\ state.\n\ The\ state\ object\ is\ set\ as\ the\ server's\ state\ object,\n\ then\ broadcast.\n\ @param\ stateObject\n
comment8.params=maxEntries
comment8.target=java.util.Map\ createLRUMap(int)
comment8.text=\n\ (c)\ Peter\ Lawrey\ (StackOverflow)\n\ \n\ Create\ new\ structure\ for\ voting\ only\ once\ per\ term.\n\ Term\ numbers\ are\ mapped\ to\ a\ boolean\ for\ whether\ the\ node\ has\ voted\n\ for\ that\ particular\ term.\n\ Size\ is\ limited\ to\ maxEntries\ (to\ prevent\ large\ data\ use\ after\ a\ long\ time)\n\ @param\ maxEntries\n\ @return\n
comment9.params=eldest
comment9.target=boolean\ removeEldestEntry(java.util.Map.Entry)
numComments=14
